{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","a","delete","name","email","phone","className","style","cursor","icon","faSortDown","onClick","faTimes","float","color","bind","to","faPencilAlt","marginRight","Contacts","Fragment","key","Header","branding","href","faHome","faPlus","faQuestion","defaultProps","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","propType","PropTypes","string","isRequired","func","defaultprops","AddContact","errors","onSubmitt","e","preventDefault","newContact","post","history","push","target","onSubmit","EditContact","updContact","match","params","put","About","NotFound","Test","console","log","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8388f37a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'DELETE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case 'ADD_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case 'UPDATE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => {\r\n      this.setState(state => reducer(state, action));\r\n    }\r\n  };\r\n  async componentDidMount() {\r\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faSortDown,\r\n  faTimes,\r\n  faPencilAlt\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: true\r\n  };\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n    } catch (e) {\r\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className='card card-body mb-3'>\r\n              <h4>\r\n                {name}{' '}\r\n                <FontAwesomeIcon\r\n                  style={{ cursor: 'pointer' }}\r\n                  icon={faSortDown}\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo\r\n                    })\r\n                  }\r\n                ></FontAwesomeIcon>\r\n                <FontAwesomeIcon\r\n                  icon={faTimes}\r\n                  style={{ cursor: 'pointer', float: 'right', color: 'red' }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                ></FontAwesomeIcon>\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <FontAwesomeIcon\r\n                    icon={faPencilAlt}\r\n                    style={{\r\n                      cursor: 'pointer',\r\n                      float: 'right',\r\n                      color: 'black',\r\n                      marginRight: '1rem'\r\n                    }}\r\n                  ></FontAwesomeIcon>\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className='list-group'>\r\n                  <li className='list-group-item'>Email: {email}</li>\r\n                  <li className='list-group-item'>Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className='display-4 mb-2'>\r\n                {' '}\r\n                <span className='text-danger'>Contact</span> List{' '}\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHome, faPlus, faQuestion } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className='navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0'>\r\n      <div className='container'>\r\n        <a href='/' className='navbar-brand'>\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className='navbar-nav mr-auto'>\r\n            <li className='nav-item'>\r\n              <Link to='/' className='nav-link'>\r\n                <FontAwesomeIcon icon={faHome}></FontAwesomeIcon> Home\r\n              </Link>\r\n            </li>\r\n            <li className='nav-item'>\r\n              <Link to='/contact/add' className='nav-link'>\r\n                <FontAwesomeIcon icon={faPlus}></FontAwesomeIcon>Add Contact\r\n              </Link>\r\n            </li>\r\n            <li className='nav-item'>\r\n              <Link to='/about' className='nav-link'>\r\n                <FontAwesomeIcon icon={faQuestion}></FontAwesomeIcon>About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: 'Contact Manager'\r\n};\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className='form-group'>\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        name={name}\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className='invalid-feedback'>{error}</div>}\r\n    </div>\r\n  );\r\n};\r\nTextInputGroup.propType = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n// eslint-disable-next-line react/no-typos\r\nTextInputGroup.defaultprops = {\r\n  type: 'text'\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n  onSubmitt = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    // check for errors\r\n    if (name === '') {\r\n      this.setState({ errors: { name: 'Name is Required' } });\r\n      return;\r\n    }\r\n\r\n    if (email === '') {\r\n      this.setState({ errors: { email: 'Email is Required' } });\r\n      return;\r\n    }\r\n\r\n    if (phone === '') {\r\n      this.setState({ errors: { phone: 'Phone is Required' } });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const res = await axios.post(\r\n      'https://jsonplaceholder.typicode.com/users',\r\n      newContact\r\n    );\r\n    dispatch({ type: 'ADD_CONTACT', payload: res.data });\r\n\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n    this.props.history.push('/');\r\n  };\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    // check for errors\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className='card mb-3'>\r\n              <div className='card-header'>Add Contact</div>\r\n              <div className='card-body'>\r\n                <form onSubmit={this.onSubmitt.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label='Name'\r\n                    name='name'\r\n                    placeholder='Enter Name'\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label='Email'\r\n                    name='email'\r\n                    placeholder='Enter Email'\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label='Phone'\r\n                    name='phone'\r\n                    placeholder='Enter Phone'\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type='submit'\r\n                    value='Add Contact'\r\n                    className='btn btn-light btn-block'\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default AddContact;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n    const contact = res.data;\r\n\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n\r\n  onSubmitt = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    // check for errors\r\n    if (name === '') {\r\n      this.setState({ errors: { name: 'Name is Required' } });\r\n      return;\r\n    }\r\n\r\n    if (email === '') {\r\n      this.setState({ errors: { email: 'Email is Required' } });\r\n      return;\r\n    }\r\n\r\n    if (phone === '') {\r\n      this.setState({ errors: { phone: 'Phone is Required' } });\r\n      return;\r\n    }\r\n\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updContact\r\n    );\r\n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\r\n\r\n    // clear state\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n    this.props.history.push('/');\r\n  };\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    // check for errors\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className='card mb-3'>\r\n              <div className='card-header'>Edit Contact</div>\r\n              <div className='card-body'>\r\n                <form onSubmit={this.onSubmitt.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label='Name'\r\n                    name='name'\r\n                    placeholder='Enter Name'\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label='Email'\r\n                    name='email'\r\n                    placeholder='Enter Email'\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label='Phone'\r\n                    name='phone'\r\n                    placeholder='Enter Phone'\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type='submit'\r\n                    value='Update Contact'\r\n                    className='btn btn-light btn-block'\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default EditContact;\r\n","import React, { Component } from 'react';\r\nclass About extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>This is about Page</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from 'react';\r\nclass NotFound extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 className='display-4'>\r\n          {' '}\r\n          <span className='text-danger'>404</span> Page Not Found!\r\n        </h1>\r\n        <p className='lead'>Sorry, this page does not exist</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { Component } from 'react';\r\nclass Test extends Component {\r\n  state = {};\r\n  componentDidMount() {\r\n    console.log('mount');\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>This is test Component</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/font-awesome/css/font-awesome.min.css';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\n// get our fontawesome imports\nimport { Provider } from './context';\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className='App'>\n            <Header branding='Contact Manager' />\n            <div className='container'>\n              <Switch>\n                <Route exact path='/' component={Contacts} />\n                <Route exact path='/contact/add' component={AddContact} />\n                <Route exact path='/contact/edit/:id' component={EditContact} />\n                <Route exact path='/about' component={About} />\n                <Route exact path='/test' component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}